services:
  # ----------------------------------------------------------------------------------------------------
  # Wazuh Stack (Manager, Indexer, Dashboard)
  # Pulled from Wazuh's official Docker Compose templates for simplicity
  # ----------------------------------------------------------------------------------------------------

  wazuh.manager:
    image: wazuh/wazuh-manager:4.8.0
    container_name: wazuh.manager
    hostname: wazuh.manager
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 655360
        hard: 655360
    ports:
      - "1514:1514/tcp" # Agent connection service
      - "1514:1514/udp" # Agent connection service (disabled by default)
      - "1515:1515/tcp" # Agent enrollment service
      - "514:514/udp"
      - "55000:55000/tcp" # Wazuh server RESTful API
    environment:
      - INDEXER_URL=https://wazuh.indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - FILEBEAT_SSL_VERIFICATION_MODE=full
      - SSL_CERTIFICATE_AUTHORITIES=/etc/ssl/root-ca.pem
      - SSL_CERTIFICATE=/etc/ssl/filebeat.pem
      - SSL_KEY=/etc/ssl/filebeat.key
      - WAZUH_DEBUG=1
      - API_USERNAME=wazuh
      - API_PASSWORD=1!SecretPassword # In production, use secrets management      
    volumes:
      - wazuh_api_configuration:/var/ossec/api/configuration
      - wazuh_etc:/var/ossec/etc
      - wazuh_logs:/var/ossec/logs
      - wazuh_queue:/var/ossec/queue
      - wazuh_var_multigroups:/var/ossec/var/multigroups
      - wazuh_integrations:/var/ossec/integrations
      - wazuh_active_response:/var/ossec/active-response/bin
      - wazuh_agentless:/var/ossec/agentless
      - wazuh_wodles:/var/ossec/wodles
      - filebeat_etc:/etc/filebeat
      - filebeat_var:/var/lib/filebeat
      - ./wazuh/config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.manager.pem:/etc/ssl/filebeat.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.manager-key.pem:/etc/ssl/filebeat.key
      - ./wazuh/config/wazuh_cluster/wazuh_manager.conf:/wazuh-config-mount/etc/ossec.conf
    networks:
      - wazuh-net



  wazuh.indexer:
    image: wazuh/wazuh-indexer:4.8.0
    container_name: wazuh.indexer
    hostname: wazuh.indexer
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - 'INDEXER_PASSWORD=SecretPassword'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - wazuh-indexer-data:/var/lib/wazuh-indexer
      - ./wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/certs/root-ca.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.indexer-key.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.key
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.indexer.pem:/usr/share/wazuh-indexer/certs/wazuh.indexer.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/admin.pem:/usr/share/wazuh-indexer/certs/admin.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/admin-key.pem:/usr/share/wazuh-indexer/certs/admin-key.pem
      - ./wazuh/config/wazuh_indexer/wazuh.indexer.yml:/usr/share/wazuh-indexer/opensearch.yml
      - ./wazuh/config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/opensearch-security/internal_users.yml
    networks:
      - wazuh-net


  wazuh.dashboard:
    image: wazuh/wazuh-dashboard:4.8.0
    container_name: wazuh.dashboard
    hostname: wazuh.dashboard
    restart: always
    ports:
      - 443:5601
    environment:
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - WAZUH_API_URL=https://wazuh.manager
      - DASHBOARD_USERNAME=kibanaserver
      - DASHBOARD_PASSWORD=kibanaserver
      - API_USERNAME=wazuh
      - API_PASSWORD=1!SecretPassword
    volumes:
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.dashboard.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/wazuh.dashboard-key.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
      - ./wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-dashboard/certs/root-ca.pem
      - ./wazuh/config/wazuh_dashboard/opensearch_dashboards.yml:/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml
      - ./wazuh/config/wazuh_dashboard/wazuh.yml:/usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml
      - wazuh-dashboard-config:/usr/share/wazuh-dashboard/data/wazuh/config
      - wazuh-dashboard-custom:/usr/share/wazuh-dashboard/plugins/wazuh/public/assets/custom
    networks:
      - wazuh-net
    depends_on:
      - wazuh.manager


   # ----------------------------------------------------------------------------------------------------
  # Custom Lab Services
  # ----------------------------------------------------------------------------------------------------
  coraza-proxy:
    build:
      context: ./coraza-proxy
      dockerfile: Dockerfile
    container_name: coraza-proxy
    hostname: coraza-proxy
    ports:
      - "8080:8080" # Exposed to host for attacker to access
    environment:
      - AI_MICROSERVICE_URL=http://ai-microservice:5000/classify
      - TARGET_APP_URL=http://juice-shop:3000
    volumes:
      - ./coraza-proxy/wazuh_agent_config/ossec.conf:/var/ossec/etc/ossec.conf # Mount agent config
      #- coraza_logs:/var/log/coraza # Persistent logs for inspection/Filebeat
      - ./training/training-data/raw:/var/log/coraza # Persistent logs for inspection/Filebeat
    networks:
      - app-net
      - wazuh-net # For Wazuh agent to communicate with manager
    depends_on:
      - ai-microservice
      - juice-shop
      - wazuh.manager # Ensure manager is up for agent enrollment


  ai-microservice:
    build:
      context: ./ai-microservice
      dockerfile: Dockerfile
    container_name: ai-microservice
    hostname: ai-microservice
    ports:
      - "5000:5000" # For Coraza Proxy to access
    volumes:
      - ./ai-microservice/wazuh_agent_config/ossec.conf:/var/ossec/etc/ossec.conf # Mount agent config
      # --- IMPORTANT: Mount your trained model here ---
      # This line maps your local trained model directory to /app/model inside the container
      # - ./predictive_model:/app/model:ro # Host path : Container path : read-only
    networks:
      - wazuh-net # For Wazuh agent to communicate with manager
    depends_on:
      - wazuh.manager # Ensure manager is up for agent enrollment

  kali:
    build:
      context: ./kali 
      dockerfile: Dockerfile 
    container_name: kali
    hostname: kali
    volumes:
      - ./kali/locust-reports:/app/reports # Mounts a local 'locust-reports' directory to container's /app/reports
    stdin_open: true # Keep stdin open for interactive sessions
    tty: true # Allocate a pseudo-TTY for interactive sessions
    command: /app/startup.sh locust-then-shell
    cap_add:
      - NET_ADMIN # Needed for some network tools if you want to use them
    networks:
      - app-net
    depends_on:
      - coraza-proxy # Ensure proxy is up before attacker starts


  juice-shop:
    build:
      context: ./juice-shop # Point to your new directory
      dockerfile: Dockerfile      # Use the Dockerfile inside it
    container_name: juice-shop
    hostname: juice-shop
    networks:
      - app-net
      - wazuh-net # For Wazuh agent to communicate with manager




networks:
  app-net: # For app components (Coraza, AI, Juice Shop, ELK, Kali)
    driver: bridge
  wazuh-net: # For Wazuh components (Manager, Indexer, Dashboard, Agents)
    driver: bridge


volumes:  
  wazuh_api_configuration:
  wazuh_etc:
  wazuh_logs:
  wazuh_queue:
  wazuh_var_multigroups:
  wazuh_integrations:
  wazuh_active_response:
  wazuh_agentless:
  wazuh_wodles:
  filebeat_etc:
  filebeat_var:
  wazuh-indexer-data:
  wazuh-dashboard-config:
  wazuh-dashboard-custom:
 # coraza_logs: # Volume for Coraza logs to be persistent and accessible by Filebeat if needed


